Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

Select count(*)
From table;
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

Select count(distinct(key))
From table;


i. Business = id: 10000
ii. Hours = business_id: 1562
iii. Category = business_id:2643
iv. Attribute = business_id: 1115
v. Review = id: 10000; user_id: 9581; business_id: 8090
vi. Checkin = business_id: 493
vii. Photo = id: 10000; business_id: 6493
viii. Tip = user_id: 537; business_id: 3979
ix. User = id:10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:

		SELECT COUNT(*)
		FROM user
		WHERE id = NULL OR
      			name = NULL OR
      			review_count = NULL OR
      			yelping_since = NULL OR
      			useful = NULL OR
      			funny = NULL OR
      			cool = NULL OR
      			fans = NULL OR
      			average_stars = NULL OR
      			compliment_hot = NULL OR
      			compliment_more = NULL OR
      			compliment_profile = NULL OR
      			compliment_cute = NULL OR
      			compliment_list = NULL OR
      			compliment_note = NULL OR
      			compliment_plain = NULL OR
      			compliment_cool = NULL OR
      			compliment_funny = NULL OR
      			compliment_writer = NULL OR
      			compliment_photos = NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	

	SELECT city,
        		SUM(review_count) as reviews
	FROM business
	GROUP BY city
	ORDER BY reviews DESC;
	

	Copy and Paste the Result Below:

	+-----------------+---------+
	| city            | reviews |
	+-----------------+---------+
	| Las Vegas       |   82854 |
	| Phoenix         |   34503 |
	| Toronto         |   24113 |
	| Scottsdale      |   20614 |
	| Charlotte       |   12523 |
	| Henderson       |   10871 |
	| Tempe           |   10504 |
	| Pittsburgh      |    9798 |
	| MontrÃ©al        |    9448 |
	| Chandler        |    8112 |
	| Mesa            |    6875 |
	| Gilbert         |    6380 |
	| Cleveland       |    5593 |
	| Madison         |    5265 |
	| Glendale        |    4406 |
	| Mississauga     |    3814 |
	| Edinburgh       |    2792 |
	| Peoria          |    2624 |
	| North Las Vegas |    2438 |
	| Markham         |    2352 |
	| Champaign       |    2029 |
	| Stuttgart       |    1849 |
	| Surprise        |    1520 |
	| Lakewood        |    1465 |
	| Goodyear        |    1155 |
	+-----------------+---------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

Select stars, count(stars) as count
From business
Where city = 'Avon'
Group by stars;


Copy and Paste the Resulting Table Below (2 columns – star rating and count):

	+-------+-------+
	| stars | count |
	+-------+-------+
	|   1.5 |     1 |
	|   2.5 |     2 |
	|   3.5 |     3 |
	|   4.0 |     2 |
	|   4.5 |     1 |
	|   5.0 |     1 |
	+-------+-------+


ii. Beachwood

SQL code used to arrive at answer:


SELECT stars,
        COUNT(stars) as count
FROM business
WHERE city = 'Beachwood'
GROUP BY stars






Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		

	+-------+-------+
	| stars | count |
	+-------+-------+
	|   2.0 |     1 |
	|   2.5 |     1 |
	|   3.0 |     2 |
	|   3.5 |     2 |
	|   4.0 |     1 |
	|   4.5 |     2 |
	|   5.0 |     5 |
	+-------+-------+



7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	select name, id, review_count
	from user
	order by review_count desc
	limit 3;

	
		
	Copy and Paste the Result Below:
		

	+--------+------------------------+--------------+
	| name   | id                     | review_count |
	+--------+------------------------+--------------+
	| Gerald | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |
	| Sara   | -3s52C4zL_DHRK0ULG6qtg |         1629 |
	| Yuri   | -8lbUNlXVSoXqaRRiHiSNg |         1339 |
	+--------+------------------------+--------------+



8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	

	select name, id, fans, review_count 
	from users
	where review_count > 1000
	order by fans desc;


	results:
	
	+---------+------------------------+------+--------------+
	| name    | id                     | fans | review_count |
	+---------+------------------------+------+--------------+
	| Harald  | --2vR0DIsmQ6WfcSzKWigw |  311 |         1153 |
	| Gerald  | -G7Zkl1wIWBBmD0KRy_sCw |  253 |         2000 |
	| William | -FZBTkAZEXoP7CYvRV2ZwQ |  126 |         1215 |
	| Roanna  | -DFCC64NXgqrxlO8aLU5rg |  104 |         1039 |
	| .Hon    | -K2Tcgh2EKX6e6HqqIrBIQ |  101 |         1246 |
	| Yuri    | -8lbUNlXVSoXqaRRiHiSNg |   76 |         1339 |
	| Sara    | -3s52C4zL_DHRK0ULG6qtg |   50 |         1629 |
	| eric    | -gokwePdbXjfS0iF7NsUGA |   16 |         1116 |
	+---------+------------------------+------+--------------+

	conclusion:
	Posing more reviews is not neccesarily correlated with more fans. 
	Looking at the table above, we can see that the number of fans varies for the top 8 users that posed the most reviews.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	 There are more reviews with the word "love" (1780 reviews) than with the word "hate" (232 reviews).
	
	
	
	SQL code used to arrive at answer:

	SELECT COUNT(text)
	FROM review
	WHERE text LIKE '%love%'

	SELECT COUNT(text)
	FROM review
	WHERE text LIKE '%hate%'

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	select id, name, fans
	from user
	order by fans desc
	Limit 10;
	
	Copy and Paste the Result Below:
	
	+-----------+------------------------+------+
	| name      | id                     | fans |
	+-----------+------------------------+------+
	| Amy       | -9I98YbNQnLdAmcYfb324Q |  503 |
	| Mimi      | -8EnCioUmDygAbsYZmTeRQ |  497 |
	| Harald    | --2vR0DIsmQ6WfcSzKWigw |  311 |
	| Gerald    | -G7Zkl1wIWBBmD0KRy_sCw |  253 |
	| Christine | -0IiMAZI2SsQ7VmyzJjokQ |  173 |
	| Lisa      | -g3XIcCb2b-BD0QBCcq2Sw |  159 |
	| Cat       | -9bbDysuiWeo2VShFJJtcw |  133 |
	| William   | -FZBTkAZEXoP7CYvRV2ZwQ |  126 |
	| Fran      | -9da1xk7zgnnfO1uTVYGkA |  124 |
	| Lissa     | -lh59ko3dxChBSZ9U7LfUw |  120 |
	+-----------+------------------------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

I chose Toronto and food category. 

Code:
select b.stars,hours
from business b
join category c on b.id = c.business_id
join hours h on b.id = h.business_id
where city = 'Toronto'
and category = 'Food'
order by stars desc;

Output:
+-------+-----------------------+
| stars | hours                 |
+-------+-----------------------+
|   4.5 | Monday|16:00-2:00     |
|   4.5 | Tuesday|18:00-2:00    |
|   4.5 | Friday|18:00-2:00     |
|   4.5 | Wednesday|18:00-2:00  |
|   4.5 | Thursday|18:00-2:00   |
|   4.5 | Sunday|16:00-2:00     |
|   4.5 | Saturday|16:00-2:00   |
|   4.0 | Tuesday|15:00-21:00   |
|   4.0 | Friday|15:00-21:00    |
|   4.0 | Wednesday|15:00-21:00 |
|   4.0 | Thursday|15:00-21:00  |
|   4.0 | Sunday|11:00-21:00    |
|   4.0 | Saturday|11:00-21:00  |
|   2.5 | Monday|8:00-22:00     |
|   2.5 | Tuesday|8:00-22:00    |
|   2.5 | Friday|8:00-22:00     |
|   2.5 | Wednesday|8:00-22:00  |
|   2.5 | Thursday|8:00-22:00   |
|   2.5 | Sunday|8:00-22:00     |
|   2.5 | Saturday|8:00-22:00   |
+-------+-----------------------+

Analysis:
Yes. The 2-3 star group opens earlier, while the 4-5 star group opens leter.



ii. Do the two groups you chose to analyze have a different number of reviews?



The 2-3 star group has less reviews than the other group (10 reviews), while the 4-5 star group has more reviews.


         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.


No, I am not able to do that because my sample is too small. There are just three restaurants.



SQL code used for analysis:

Code:

select b.name, b.stars, b.review_count, h.hours, b.neighborhood
from business b
join category c on b.id = c.business_id
join hours h on b.id = h.business_id
where city = 'Toronto'
and category = 'Food'
group by b.stars
order by stars desc;

Output:

+--------------+-------+--------------+----------------------+-----------------+
| name         | stars | review_count | hours                | neighborhood    |
+--------------+-------+--------------+----------------------+-----------------+
| Cabin Fever  |   4.5 |           26 | Saturday|16:00-2:00  | High Park       |
| Halo Brewery |   4.0 |           15 | Saturday|11:00-21:00 | Wallace Emerson |
| Loblaws      |   2.5 |           10 | Saturday|8:00-22:00  | Roncesvalles    |
+--------------+-------+--------------+----------------------+-----------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
        The restaurant which is open has higher average stars rating(3.68), while the closed restaurant has lower average stars rating(3.52).

         
ii. Difference 2:
         The restaurant which is open has more average reviews(31.76), while the closed restaurant has less average reviews(23.198). 
         
         
SQL code used for analysis:

Code:

select name, avg(stars), avg(review_count), is_open
from business
group by is_open;

Output:

+----------------------------+---------------+-------------------+---------+
| name                       |    avg(stars) | avg(review_count) | is_open |
+----------------------------+---------------+-------------------+---------+
| Eki-Bento Japanese Express | 3.52039473684 |     23.1980263158 |       0 |
| Scott Roofing Company      | 3.67900943396 |     31.7570754717 |       1 |
+----------------------------+---------------+-------------------+---------+
	

	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
      
	Analyzing the relationship among average reviews, stars and checkins.   
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
               
	I will need the checkin count, review count and the stars. Because restaurant checkins are affected by online reviews and restaurant stars.
            
                  
iii. Output of your finished dataset:

+-------+--------------+---------+
| stars | review_count | checkin |
+-------+--------------+---------+
|   3.0 |           19 |       1 |
|   2.0 |           16 |       1 |
|   4.5 |           16 |       1 |
|   3.5 |            9 |       2 |
|   4.0 |            5 |       1 |
|   1.0 |            4 |       2 |
|   1.5 |            3 |       1 |
|   2.5 |            3 |       1 |
+-------+--------------+---------+
         
         

iv. Provide the SQL code you used to create your final dataset:

select b.stars, b.review_count, c.count as checkin
from business b
join checkin c on b.id = c.business_id
group by stars
order by review_count desc;











